<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2019 Baidu, Inc. All Rights Reserved.
  -->
<configuration>
    <!-- 全部日志，包含全部的RPC、MQ、DB日志 -->
<!--    <property name="ALL_LOG_FILE_PATH" value="${LOG_PATH}/saas.log"/>-->
<!--    <property name="ADDITIONAL" value="%X{APM_TRACE_ID} %X{REQUEST_ID} %X{REQUEST_TYPE} %X{TRACE_ID} %X{REQUEST_URL}"/>-->
<!--    <property name="LOG_LEVEL_PATTERN" value="saas ${ADDITIONAL} %5p"/>-->
<!--    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>-->
<!--    <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>-->

    <springProperty scope="context" name="springAppName" source="spring.application.name" />
    <property name="LOG_FILE_PATH" value="${BUILD_FOLDER:-build}/${springAppName}" />
    <property name="INFO_FILE_PATH" value="${LOG_FILE_PATH}/info.log"/>
    <property name="ERROR_FILE_PATH" value="${LOG_FILE_PATH}/error.log"/>

    <property name="CONSOLE_LOG_PATTERN"
              value="%d{yyyy-MM-dd' 'HH:mm:ss.sss} [%-5p] %C %t %L %X{REQUEST_ID} %X{TRACE_ID} | %m%n " />
<!--    ,%X{X-B3-SpanId:-}-->

    <appender name="CONSOLE-LOG" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </layout>
    </appender>

    <!--获取比info级别高(包括info级别)但除error级别的日志-->
    <appender name="INFO-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>

        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
        <file>${INFO_FILE_PATH}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${INFO_FILE_PATH}/%d{yyyy-MM-dd}.%i.zip</fileNamePattern>
            <maxHistory>30</maxHistory>
            <!-- 日志总保存量为10GB -->
            <totalSizeCap>10 GB</totalSizeCap>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--文件达到 最大128MB时会被压缩和切割 -->
                <maxFileSize>128 MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!--error-->
     <appender name="ERROR-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">

         <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
             <level>ERROR</level>
         </filter>

            <encoder>
                <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            </encoder>
            <file>${ERROR_FILE_PATH}</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${ERROR_FILE_PATH}/%d{yyyy-MM-dd}.%i.zip</fileNamePattern>
                <maxHistory>30</maxHistory>
                <!-- 日志总保存量为10GB -->
                <totalSizeCap>10 GB</totalSizeCap>
                <timeBasedFileNamingAndTriggeringPolicy
                        class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <!--文件达到 最大128MB时会被压缩和切割 -->
                    <maxFileSize>128 MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
        </appender>



    <appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认-1,不设置的话在队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="INFO-LOG"/>
    </appender>

    <appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认-1，不设置的话在队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="ERROR-LOG"/>
    </appender>

<!--            name为包路径 如果我们想要打印mybatis的日志的话将mapper的路径写入，指定日志级别即可-->
<!--    <logger name="org.springframework.cache" level="INFO" additivity="false">-->
<!--        <appender-ref ref="CONSOLE-LOG" />-->
<!--        <appender-ref ref="INFO-LOG" />-->
<!--        <appender-ref ref="ERROR-LOG" />-->
<!--    </logger>-->


    <root level="info">
        <appender-ref ref="CONSOLE-LOG" />
        <appender-ref ref="ASYNC-INFO" />
        <appender-ref ref="ASYNC-ERROR" />
    </root>
</configuration>